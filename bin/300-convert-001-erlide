#!/bin/bash

BINDIR=$(dirname $(readlink -f $0))
BASEDIR=$(readlink -f "$BINDIR/../")

SRCDIR=$BASEDIR/src
OUTDIR=$BASEDIR/converted/erlide
TPLDIR=$OUTDIR/templates
XMLDIR=$OUTDIR/xml

mkdir -p $TPLDIR
mkdir -p $XMLDIR
rm -f $TPLDIR/*
rm -f $XMLDIR/*

echo_xml() {
	name=$1
	desc=$2
	context=$3
	id=$4
	echo -n "<template autoinsert=\"true\" context=\"$context\" deleted=\"false\" description=\"$desc\" enabled=\"true\" id=\"org.erlide.ui.erlangsource.$id\" name=\"$name\">"
	cat $5 | while IFS=$'\n' read -r line || [[ -n "$line" ]]; do
		echo $line | sed 's/[>]/\&gt;/g' | sed 's/[<]/\&lt;/g'
	done
	echo -n "</template>"
}

# Gather module templates
ls $SRCDIR/module-templates/*.erl | while read fn; do
	tn=$(basename $fn | sed 's/\.erl$//')
	
	cp $fn $TPLDIR/$tn.tmpl
	
	desc=`cat "$SRCDIR/module-templates/$tn.desc"`
	if [ "$tn" == "module" ]; then
		id="modulelayout"
	else
		id=$tn
	fi
	echo_xml "$tn" "$desc" "org.erlide.ui.erlangsource.template.context.module" "$id" "$fn" > $XMLDIR/$tn.xml
done

# Gather module element templates
ls $SRCDIR/module-element-templates/*.tmpl | while read fn; do
	tn=$(basename $fn | sed 's/\.tmpl$//')
	
	cp $fn $TPLDIR/$tn.tmpl
	
	desc=$(cat "$SRCDIR/module-element-templates/$tn.desc")
	id=$(echo "$tn" | sed 's/_//g')
	echo_xml "$tn" "$desc" "org.erlide.ui.erlangsource.template.context.module.element" "$id" "$fn" > $XMLDIR/$tn.xml
done

# merge
echo '<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates>' > $OUTDIR/templates.xml
cat $XMLDIR/*.xml >> $OUTDIR/templates.xml
echo '</templates>' >> $OUTDIR/templates.xml

cp $OUTDIR/templates.xml $BASEDIR/templates.xml